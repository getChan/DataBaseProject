import java.io.IOException;
import org.jsoup.Jsoup;
import org.jsoup.nodes.Document;
import org.jsoup.nodes.Element;
import org.jsoup.select.Elements;
import java.util.Scanner;
import java.util.Calendar;
import java.util.Date;
import java.util.GregorianCalendar;
import java.util.Locale;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.sql.*;

public class date {

   public static String doDateAdd(String dates) throws ParseException { // 날짜 계산
      Calendar cal = new GregorianCalendar(Locale.KOREA); // cal 객체생성
      SimpleDateFormat fm = new SimpleDateFormat("yyyyMMddHH");// Dateform 생성

      Date date = fm.parse(dates);// 입력받은 문자열 date를 Date형식으료 변환
      cal.setTime(date);
      cal.add(Calendar.DAY_OF_YEAR, 1); // 하루를 더한다.
      String strDate = fm.format(cal.getTime());
      return strDate;
   }

   public static void main(String[] args) throws ParseException {
      // 준비
      Scanner sc = new Scanner(System.in);
      System.out.println("노래 제목 검색");
      String Song_name = sc.nextLine();
      System.out.println("음원 탐색 기간 설정  (언제부터? ex) yyyyMMDDHH)");
      String to_Date = sc.next();
      System.out.println("음원 탐색 기간 설정 (언제까지? ex) yyyyMMDDHH)");
      String from_Date = sc.next();
      String Artist = "";
      String Title = "";

      //DB연동 준비
      Connection conn = null;
      PreparedStatement pstmt = null;

      //차트 크롤링 및 데이터 베이스 저장
      do {
         String url = "http://www.mnet.com/chart/TOP100/" + to_Date+ "?pNum=1";
         String url2 = "http://www.mnet.com/chart/TOP100/" + to_Date + "?pNum=2";
         
         Document doc = null;
         Document doc2 = null;
         int cnt = 1; // 음원 차트 순위 카운팅

         try { // Jsoup
            doc = Jsoup.connect(url).get(); //엠넷 1번페이지 (1~50)
            doc2 = Jsoup.connect(url2).get(); //엠넷 2번페이지 (51위~100위)
         } catch (IOException e) {
            e.printStackTrace();
         }
         boolean is_song = false; // 해당 노래가 있는지 체크

         // 주요 차트를 나오는 태그를 찾아서 가져오도록 한다.
         Elements element = doc.select("div.MMLTable");
         Elements element2 = doc2.select("div.MMLTable");
         //크롤링 구간!
         for (Element el : element.select("div.MMLITitle_Box.info")) {
            Title = el.select("a.MMLI_Song").text();
            Artist = el.select("a.MMLIInfo_Artist").text();
            //크롤링 성공하면 다음 if문 실행
            if (Song_name.equals(Title)) {
               System.out.println("날짜:" + to_Date + " 제목:" + Title + " 가수 :" + Artist + " 순위:" + cnt + "위");
               is_song = true; //is_song 이 true 이면  다음 for문(page2 단계)  넘어가고 바로 디비에 저장
                // 디비저장
               try {
                  String db_url = "jdbc:mysql://zuzak.cvqcrkck1aqg.us-east-1.rds.amazonaws.com?useUnicode=true&characterEncoding=euc_kr";
                  String id = "getChan";
                  String pw = "cksdl951!!";

                  Class.forName("com.mysql.jdbc.Driver");
                  conn = DriverManager.getConnection(db_url, id, pw);

                  String sql = "insert into zuzak.mnet values(?,?,?,?)";
                  pstmt = conn.prepareStatement(sql);

                  pstmt.setString(1, to_Date);
                  pstmt.setString(2, Integer.toString(cnt));
                  pstmt.setString(3, Title);
                  pstmt.setString(4, Artist); // 현재 날짜와 시간

                  pstmt.executeUpdate(); // 쿼리를 실행한다.

                  System.out.println("mnet테이블에 DB 저장."); // 성공시 메시지 출력

               } catch (Exception e) { // 예외가 발생하면 예외 상황을 처리한다.
                  e.printStackTrace();
                  System.out.println("mnet 테이블에 새로운 레코드 추가에 실패했습니다.");
               } finally { // 쿼리가 성공 또는 실패에 상관없이 사용한 자원을 해제 한다. (순서중요)
                  if (pstmt != null)
                     try {
                        pstmt.close();
                     } catch (SQLException sqle) {
                     } // PreparedStatement 객체 해제
                  if (conn != null)
                     try {
                        conn.close();
                     } catch (SQLException sqle) {
                     } // Connection 해제
               }
               
               break;
            }
            cnt++;
         }
         // 1번페이지에 곡이없으면 다음  크롤링 실행
         if (!is_song) {
            for (Element el : element2.select("div.MMLITitle_Box.info")) {
               Title = el.select("a.MMLI_Song").text();
               Artist = el.select("a.MMLIInfo_Artist").text();
               if (Song_name.equals(Title)) {
                  System.out.println("날짜:" + to_Date + " 제목:" + Title + " 가수 :" + Artist + " 순위:" + cnt + "위");
                  is_song = true;
                  
                  try {
                     String db_url = "jdbc:mysql://zuzak.cvqcrkck1aqg.us-east-1.rds.amazonaws.com?useUnicode=true&characterEncoding=euc_kr";
                     String id = "getChan";
                     String pw = "cksdl951!!";

                     Class.forName("com.mysql.jdbc.Driver");
                     conn = DriverManager.getConnection(db_url, id, pw);

                     String sql = "insert into zuzak.mnet values(?,?,?,?)";

                     pstmt.setString(1, to_Date);
                     pstmt.setString(2, Integer.toString(cnt));
                     pstmt.setString(3, Title);
                     pstmt.setString(4, Artist); // 현재 날짜와 시간

                     pstmt.executeUpdate(); // 쿼리를 실행한다.

                     System.out.println("mnet테이블에 DB 저장."); // 성공시 메시지 출력

                  } catch (Exception e) { // 예외가 발생하면 예외 상황을 처리한다.
                     e.printStackTrace();
                     System.out.println("mnet 테이블에 새로운 레코드 추가에 실패했습니다.");
                  } finally { // 쿼리가 성공 또는 실패에 상관없이 사용한 자원을 해제 한다. (순서중요)
                     if (pstmt != null)
                        try {
                           pstmt.close();
                        } catch (SQLException sqle) {
                        } // PreparedStatement 객체 해제
                     if (conn != null)
                        try {
                           conn.close();
                        } catch (SQLException sqle) {
                        } // Connection 해제
                  }                  
                  break;
               }
               
               cnt++;

            }
            //만약 두 페이지에(모든 순위권에) 곡이 없으면 디비 저장안하고 차트에 없다는 로그 생성
            if (!is_song) {
               System.out.println("날짜:" + to_Date + " 제목: " + Song_name + " 해당 노래가 차트에 없습니다.");
            }
         }

         to_Date = doDateAdd(to_Date); //날짜 하루를 증가시킴

      } while (!(to_Date.equals(from_Date))); 
      sc.close();
   }
}
